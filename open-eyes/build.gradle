apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
// 扩展插件
apply plugin: 'kotlin-android-extensions'
// kapt3插件
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Deps.android.compileSdkVersion
    buildToolsVersion Deps.android.buildToolsVersion

    defaultConfig {
        applicationId "com.fphoenixcorneae.openeyes"
        minSdkVersion Deps.android.minSdkVersion
        targetSdkVersion Deps.android.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 支持矢量图
        vectorDrawables {
            useSupportLibrary = true
        }

        // CPU架构,只支持目前主流版本"arm64-v8a",性能最佳
        // "armeabi"只为兼容手机测试
        ndk {
            abiFilters "arm64-v8a", "armeabi"
        }

        // 如果没有特殊的需求的话，可以只编译中文，因为其他的语言用不上，如果用不上的语言编译了，
        // 会在 resource 的表里面占用大量的空间，故仅支持 中文
        resConfigs "zh"
    }

    signingConfigs {
        release {
            keyAlias 'kotlinmvvm'
            keyPassword 'kotlinmvvm'
            storeFile file('../kotlinmvvm.jks')
            storePassword 'kotlinmvvm'
            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            keyAlias 'kotlinmvvm'
            keyPassword 'kotlinmvvm'
            storeFile file('../kotlinmvvm.jks')
            storePassword 'kotlinmvvm'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            // 执行proguard混淆
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFiles 'proguard-rules-universal.pro'
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            // 屏蔽lint耗时检查
            project.gradle.startParameter.excludedTaskNames.add('lint')
            // 执行proguard混淆
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFiles 'proguard-rules-universal.pro'
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    // 支持数据绑定框架dataBinding
    buildFeatures {
        dataBinding {
            enabled true
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    dexOptions {
        jumboMode true
        // 加快编译速度
        javaMaxHeapSize "4g"
        preDexLibraries true
        threadCount = 8
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    /* 开启实验性标志 */
    androidExtensions {
        experimental = true
        defaultCacheImplementation = "HASH_MAP" // HASH_MAP, SPARSE_ARRAY, NONE
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation project(':framework')
    implementation Deps.dagger2Libs
    kapt Deps.kaptDagger2
    implementation Deps.navigationLibs
    debugImplementation Deps.leakCanary
}
